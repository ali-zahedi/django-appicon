stages:
  - fetch-version
  - production
  - release

variables:
  AUTHOR: 'Ali Zahedigol'


.node: &node
  image: node:13
  #  before_script:
  #    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  tags:
    - node

.python: &python
  image: python:3.7
  before_script:
    # Setup SSH deploy keys
    - 'which ssh-agent || ( apt-get update -y && apt-get -y install openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  tags:
    - python

fetch-version:
  # Requires Node >= 10.13 version
  <<: *node
  stage: fetch-version
  only:
    refs:
      - master
      - develop
  script:
    - npm install @semantic-release/gitlab @semantic-release/exec @semantic-release/changelog
    - npx semantic-release --generate-notes false --dry-run
  artifacts:
    paths:
      - VERSION.txt

production:
  <<: *python
  stage: production
  environment:
    name: production
  script:
    - ssh -p "$DEPLOY_SERVER_PORT" "$USERNAME_DEPLOY_SERVER"@"$DEPLOY_SERVER" "cd $DEPLOY_PATH && git reset --hard && sed -i 's/^VERSION_NUMBER.*/VERSION_NUMBER=$(cat VERSION.txt)/' .env && git pull && source .activate && python manage.py migrate && supervisorctl restart moniaz && supervisorctl restart moniaz_celery_worker && python manage.py collectstatic --noinput && exit"
  only:
    - master
  dependencies:
    - fetch-version

release:
  <<: *node
  stage: release
  only:
    refs:
      - master
      - develop
  script:
    - touch CHANGELOG.md
    - npm install @semantic-release/gitlab @semantic-release/changelog @semantic-release/exec
    - npx semantic-release
  artifacts:
    paths:
      - CHANGELOG.md
  dependencies:
    - production
